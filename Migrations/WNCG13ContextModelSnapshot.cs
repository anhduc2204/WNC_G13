// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WNC_G13.Models;

#nullable disable

namespace WNC_G13.Migrations
{
    [DbContext(typeof(WNCG13Context))]
    partial class WNCG13ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChannelMember", b =>
                {
                    b.Property<int>("ChannelId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ChannelId", "UserId")
                        .HasName("PK__ChannelM__E9BB64D0F95C2906");

                    b.HasIndex("UserId");

                    b.ToTable("ChannelMembers", (string)null);
                });

            modelBuilder.Entity("WNC_G13.Models.ChatChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ChannelName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ChannelType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("ChatChannels");
                });

            modelBuilder.Entity("WNC_G13.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DocumentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DocumentUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UploadedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UploadedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TaskId");

                    b.HasIndex("UploadedBy");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("WNC_G13.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChannelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("WNC_G13.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("StorageLimit")
                        .HasColumnType("bigint");

                    b.Property<string>("SubscriptionPlan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("UsedStorage")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("WNC_G13.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("WNC_G13.Models.ProjectTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("TaskName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectTasks");
                });

            modelBuilder.Entity("WNC_G13.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534B14C5631")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WNC_G13.Models.UserProject", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPm")
                        .HasColumnType("bit")
                        .HasColumnName("IsPM");

                    b.HasKey("UserId", "ProjectId")
                        .HasName("PK__UserProj__00E967A3BC9502DE");

                    b.HasIndex("ProjectId");

                    b.ToTable("UserProjects");
                });

            modelBuilder.Entity("ChannelMember", b =>
                {
                    b.HasOne("WNC_G13.Models.ChatChannel", null)
                        .WithMany()
                        .HasForeignKey("ChannelId")
                        .IsRequired()
                        .HasConstraintName("FK__ChannelMe__Chann__571DF1D5");

                    b.HasOne("WNC_G13.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__ChannelMe__UserI__5812160E");
                });

            modelBuilder.Entity("WNC_G13.Models.Document", b =>
                {
                    b.HasOne("WNC_G13.Models.Project", "Project")
                        .WithMany("Documents")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK__Documents__Proje__282DF8C2");

                    b.HasOne("WNC_G13.Models.ProjectTask", "Task")
                        .WithMany("Documents")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK__Documents__TaskI__29221CFB");

                    b.HasOne("WNC_G13.Models.User", "UploadedByNavigation")
                        .WithMany("Documents")
                        .HasForeignKey("UploadedBy")
                        .HasConstraintName("FK__Documents__Uploa__2A164134");

                    b.Navigation("Project");

                    b.Navigation("Task");

                    b.Navigation("UploadedByNavigation");
                });

            modelBuilder.Entity("WNC_G13.Models.Message", b =>
                {
                    b.HasOne("WNC_G13.Models.ChatChannel", "Channel")
                        .WithMany("Messages")
                        .HasForeignKey("ChannelId")
                        .IsRequired()
                        .HasConstraintName("FK__Messages__Channe__6C190EBB");

                    b.HasOne("WNC_G13.Models.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Messages__UserId__6D0D32F4");

                    b.Navigation("Channel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WNC_G13.Models.Organization", b =>
                {
                    b.HasOne("WNC_G13.Models.User", "CreatedByNavigation")
                        .WithMany("Organizations")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Organizat__Creat__3D5E1FD2");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("WNC_G13.Models.Project", b =>
                {
                    b.HasOne("WNC_G13.Models.User", "CreatedByNavigation")
                        .WithMany("Projects")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Projects__Create__4316F928");

                    b.HasOne("WNC_G13.Models.Organization", "Organization")
                        .WithMany("Projects")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK__Projects__Organi__4222D4EF");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("WNC_G13.Models.ProjectTask", b =>
                {
                    b.HasOne("WNC_G13.Models.Project", "Project")
                        .WithMany("ProjectTasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ProjectTa__Proje__48CFD27E");

                    b.HasOne("WNC_G13.Models.User", "User")
                        .WithMany("ProjectTasks")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_ProjectTasks_UserID");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WNC_G13.Models.UserProject", b =>
                {
                    b.HasOne("WNC_G13.Models.Project", "Project")
                        .WithMany("UserProjects")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK__UserProje__Proje__5441852A");

                    b.HasOne("WNC_G13.Models.User", "User")
                        .WithMany("UserProjects")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserProje__UserI__534D60F1");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WNC_G13.Models.ChatChannel", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("WNC_G13.Models.Organization", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("WNC_G13.Models.Project", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("ProjectTasks");

                    b.Navigation("UserProjects");
                });

            modelBuilder.Entity("WNC_G13.Models.ProjectTask", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("WNC_G13.Models.User", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Messages");

                    b.Navigation("Organizations");

                    b.Navigation("ProjectTasks");

                    b.Navigation("Projects");

                    b.Navigation("UserProjects");
                });
#pragma warning restore 612, 618
        }
    }
}
